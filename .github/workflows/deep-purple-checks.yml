name: Deep Purple E2E Test Runner (Frontend Apps Only)

on:
  workflow_call:
    secrets:
      CLOUDFLARE_BYPASS_TOKEN:
        required: true
      PROD_BASIC_PASSWORD:
        required: true
      PROD_PAID_PASSWORD:
        required: true

jobs:
  run-deep-purple-tests:
    name: Run Deep Purple Tests Against Changes
    runs-on: [self-hosted, ci-universal]

    env:
      DOCKER_IMAGE: 567716553783.dkr.ecr.us-east-1.amazonaws.com/deep-purple

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Extract app name from package.json
        run: |
          echo "APP_NAME=$(grep '"name":' package.json | sed 's/.*"@typeform\/\(.*\)",/\1/')" >> $GITHUB_ENV

      - name: Print extracted app name
        run: echo "Extracted APP_NAME is ${{ env.APP_NAME }}"

      - name: Create test-results directory
        run: mkdir -p ${{ github.workspace }}/test-results

      - name: Run Deep Purple tests
        run: |
          docker run --name deep-purple-container \
            -v ${{ github.workspace }}/test-results:/home/pwuser/test-results \
            -e CLOUDFLARE_BYPASS_TOKEN=${{ secrets.CLOUDFLARE_BYPASS_TOKEN }} \
            -e PROD_BASIC_PASSWORD=${{ secrets.PROD_BASIC_PASSWORD }} \
            -e PROD_PAID_PASSWORD=${{ secrets.PROD_PAID_PASSWORD }} \
            -e SKIP_SEND_NOTIFICATIONS=true \
            ${{ env.DOCKER_IMAGE }} \
            yarn test:all            
          sleep 5  # Give container some time to start

      - name: Post test report to PR comments
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: "${{ github.workspace }}/test-results/*.json"
          github-report: false
          pull-request-report: true
          pull-request: true
          failed-report: false
          ai-report: false
          update-comment: false
          overwrite-comment: true
          exit-on-fail: false
          title: "Deep Purple Results"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
