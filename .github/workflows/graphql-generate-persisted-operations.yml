name: "Generate persisted operations"

on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: true

jobs:
  update-allow-list:
    runs-on: [self-hosted, ci-universal]
    env:
      GRAPHQL_ENDPOINTS: |
        https://graphqlbff.staging.internal.tfdev.typeform.tf
        https://graphqlbff.tfprod.internal.typeform.tf
        https://graphqlbff.tfprod.internal.eu.typeform.tf
        https://graphqlbff.tfprod.internal.eu-central-1.typeform.tf

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Set GitHub packages registry
        run: |
          npm config set '//npm.pkg.github.com/:_authToken' ${{ secrets.GH_TOKEN }}
          npm config set @typeform:registry https://npm.pkg.github.com/

      - name: Check if GraphQL endpoints are reachable
        run: |
          readarray -t ENDPOINTS <<< "$GRAPHQL_ENDPOINTS"
          for url in "${ENDPOINTS[@]}"; do
            [[ -z "$url" ]] && continue  # skip empty lines
            echo "Pinging $url..."
            curl_exit_code=0
            curl --max-time 10 "$url?runNumber=$GITHUB_RUN_NUMBER" || curl_exit_code=$?
            if [ $curl_exit_code -ne 0 ]; then
              echo "❌ Curl command failed with exit code $curl_exit_code"
              exit $curl_exit_code
            fi
          done

      - name: Install only @typeform/generate-persisted-operations-manifest in isolated temp directory
        run: |
          mkdir temp-install
          cd temp-install
          yarn init -y
          yarn add --no-lockfile --non-interactive --dev \
            @typeform/generate-persisted-operations-manifest \
            @apollo/generate-persisted-query-manifest@^1.2.2 \
            @apollo/client@^3.7.0 \
            graphql@^16.0.0
          cd ..
        env:
          GQL_MANIFEST_DOCUMENTS: '["**/*.{js,ts,tsx,graphql}","!**/*.d.ts","!**/*.spec.{ts,tsx}","!**/*.test.{ts,tsx}","!node_modules/**"]'
          GQL_MANIFEST_OUTPUT: "generated/persisted-query-manifest.json"

      - name: Generate Persisted Operations
        run: |
          cd src
          node ../temp-install/node_modules/@typeform/generate-persisted-operations-manifest/dist/index.js

      - name: List generated files
        run: |
          echo "Listing contents of ./generated directory:"
          ls -la src/generated

      - name: Display persisted-query-manifest.json
        run: |
          echo "Contents of generated/persisted-query-manifest.json:"
          cat src/generated/persisted-query-manifest.json

      - name: Extract app name from package.json
        run: |
          echo "APP_NAME=$(jq -r '.name' package.json | sed 's/@typeform\///')" >> $GITHUB_ENV

      - name: Print extracted app name
        run: echo "Extracted APP_NAME is ${{ env.APP_NAME }}"

      - name: Upload manifest to internal allow list for all endpoints
        run: |
          mapfile -t ENDPOINTS <<< "${GRAPHQL_ENDPOINTS}"
          curl_exit_code=0
          for url in "${ENDPOINTS[@]}"; do
            [[ -z "$url" ]] && continue  # skip empty lines
            echo "Uploading manifest to $url/internal/operation-allow-list?deploymentRunNumber=$GITHUB_RUN_NUMBER&appName=${APP_NAME}"
            curl --fail --max-time 30 -X PATCH "$url/internal/operation-allow-list?deploymentRunNumber=$GITHUB_RUN_NUMBER&appName=${APP_NAME}" \
              -H "Content-Type: application/json" \
              --data-binary "@src/generated/persisted-query-manifest.json"

            if [ $? -ne 0 ]; then
              echo "❌ Failed to upload manifest to $url"
              curl_exit_code=1
            else
              echo "✅ Successfully uploaded to $url"
            fi
          done

          if [ $curl_exit_code -ne 0 ]; then
            echo "❌ One or more uploads failed, failing workflow"
            exit $curl_exit_code
          fi
